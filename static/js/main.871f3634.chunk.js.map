{"version":3,"sources":["helpers/API/queries.js","context/AppContext.js","components/Header/index.js","components/Shared/Button/index.js","helpers/utilities/index.js","components/Products/Item/index.js","components/Products/List/index.js","components/Shared/Loader/index.js","views/Products/index.js","components/Hero/index.js","components/Shared/Counter/index.js","components/Cart/Item/index.js","components/Shared/Select/index.js","components/Cart/Currency/index.js","components/Cart/index.js","components/App.js","client.js","serviceWorker.js","index.js"],"names":["CURRENCY","gql","PRODUCTS","PRODUCTS_PRICES","AppContext","React","createContext","AppContextProvider","props","state","showCart","subtotal","products","currency","currencyError","setCartState","bind","setCurrency","addProduct","removeProduct","updateProductQty","updateProductPrice","this","setState","prevState","client","query","variables","errorPolicy","then","response","errors","updateProductPrices","product","id","item","quantity","calculateSubtotal","data","cache","priceString","__typename","price","setProductsState","Object","values","forEach","operation","reduce","acc","obj","Provider","value","cart","children","Component","Header","context","counter","keys","length","className","src","alt","onClick","contextType","Button","classList","text","clickEvent","defaultProps","fixedNumber","number","Number","toFixed","Item","addToCart","title","image_url","key","List","map","Loader","show","Products","useContext","useQuery","loading","error","Hero","Counter","decreaseEvent","increaseEvent","count","removeItem","increaseQty","decreaseQty","totalPrice","Select","changeEvent","options","disabled","onChange","option","index","CurrencyDropdown","errorState","updateCurrency","errorClass","Cart","e","target","renderProducts","App","ApolloClient","uri","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"++BAEA,IAAMA,EAAWC,IAAH,KAMRC,EAAWD,IAAH,KAWRE,EAAkBF,IAAH,KCjBfG,EAAaC,IAAMC,gBAEnBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,UAAU,EACVC,SAAU,EACVC,SAAU,GACVC,SAAU,MACVC,eAAe,GAGjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,mBAAqB,EAAKA,mBAAmBL,KAAxB,gBAhBT,E,2DAoBjBM,KAAKC,UAAS,SAAAC,GACZ,MAAO,CACLd,UAAWc,EAAUd,e,kCAKfG,GAAW,IAAD,OACDS,KAAKd,MAAhBiB,OACCC,MAAM,CACXA,MAAOvB,EACPwB,UAAW,CAAEd,YACbe,YAAa,QACZC,MAAM,SAAAC,GACHA,EAASC,OACX,EAAKR,UAAS,WACZ,MAAO,CACLT,eAAe,MAInB,EAAKS,UAAS,WACZ,MAAO,CACLV,WACAC,eAAe,MAEhB,WACD,EAAKkB,8B,iCAMJC,GAAU,IAAD,OACVrB,EAAaU,KAAKb,MAAlBG,SACAsB,EAAOD,EAAPC,GACFC,EAAOb,KAAKD,mBAAmBY,GAC/BG,EAAWxB,EAASsB,KAAQtB,EAASsB,GAAIE,SAAW,EAE1Dd,KAAKC,UAAS,SAACC,GACb,MAAO,CACLZ,SAAS,eACJY,EAAUZ,SADP,eAELsB,EAFK,eAGDC,EAHC,CAIJC,mBAIL,WACD,EAAKC,oBACL,EAAKtB,oB,yCAIUoB,GAAO,IAChBtB,EAAaS,KAAKb,MAAlBI,SAEAyB,EADWhB,KAAKd,MAAhBiB,OACgBc,MAAMD,KAAtBA,KACFE,EAAW,6BAAyB3B,EAAzB,OACTqB,EAAmBC,EAAnBD,GAAIO,EAAeN,EAAfM,WACNC,EAAQJ,EAAK,GAAD,OAAIG,EAAJ,YAAkBP,IAAMM,GAE1C,OAAO,eACFL,EADL,CAEEO,Y,uCAIa9B,GAAW,IAAD,OACzBU,KAAKC,UAAS,WACZ,MAAO,CACLX,eAED,WACD,EAAKyB,yB,oCAIKH,GAAK,IACTtB,EAAaU,KAAKb,MAAlBG,gBACDA,EAASsB,GAChBZ,KAAKqB,iBAAiB/B,K,4CAGD,IACba,EAAWH,KAAKd,MAAhBiB,OADY,EAEYH,KAAKb,MAA5BG,EAFW,EAEXA,SAAUC,EAFC,EAEDA,SACXyB,EAASb,EAAOc,MAAMD,KAAtBA,KAERM,OAAOC,OAAOjC,GAAUkC,SAAQ,SAAAX,GAC9B,IAAMK,EAAW,6BAAyB3B,EAAzB,OACTqB,EAAmBC,EAAnBD,GAAIO,EAAeN,EAAfM,WACNC,EAAQJ,EAAK,GAAD,OAAIG,EAAJ,YAAkBP,IAAMM,GAE1C5B,EAASsB,GAAT,eACKC,EADL,CAEEO,aAGJpB,KAAKqB,iBAAiB/B,K,uCAGPmC,EAAWb,GAAK,IAAD,OACxBD,EAAUX,KAAKb,MAAMG,SAASsB,GAC9BE,EAAaH,EAAbG,SAEN,OAAOW,GACL,IAAK,WACHX,IACA,MACF,IAAK,WACHA,IAMAA,EAAW,EACbd,KAAKH,cAAce,GAEnBZ,KAAKC,UAAS,SAACC,GACb,MAAO,CACLZ,SAAS,eACJY,EAAUZ,SADP,eAELsB,EAFK,eAGDD,EAHC,CAIJG,mBAIL,WACD,EAAKC,yB,0CAKU,IACXzB,EAAaU,KAAKb,MAAlBG,SACFD,EAAWiC,OAAOC,OAAOjC,GAAUoC,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAOC,EAAIR,MAAQQ,EAAId,WAAW,GAEhGd,KAAKC,UAAS,WACZ,MAAO,CACLZ,iB,+BAMJ,OACE,kBAACP,EAAW+C,SAAZ,CACEC,MAAO,CACLC,KAAM/B,KAAKb,MACXM,aAAcO,KAAKP,aACnBE,YAAaK,KAAKL,YAClBC,WAAYI,KAAKJ,WACjBC,cAAeG,KAAKH,cACpBC,iBAAkBE,KAAKF,mBAGxBE,KAAKd,MAAM8C,c,GArLaC,aCAZC,G,6KAGV,IAAD,EACyBlC,KAAKmC,QAA5BJ,EADF,EACEA,KAAMtC,EADR,EACQA,aACLH,EAAayC,EAAbzC,SACH8C,EAAUd,OAAOe,KAAK/C,GAAUgD,OAExC,OACI,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,eAAeC,IAAI,2FAA2FC,IAAI,UACjI,4BAAQF,UAAU,eAAeG,QAASjD,GACxC,yBAAK8C,UAAU,oBAAoBC,IAAI,oHAAoHC,IAAI,KAC/J,0BAAMF,UAAU,wBAAwBH,U,GAdhBH,cAAfC,EACZS,YAAc7D,E,kBCFR,SAAS8D,EAAT,GAIX,IAHHC,EAGE,EAHFA,UACAC,EAEE,EAFFA,KACAC,EACE,EADFA,WAEA,OACC,4BACCR,UAAS,cAASM,GAClBH,QAASK,GAETD,GAKHF,EAAOI,aAAe,CACrBH,UAAW,cACXC,KAAM,YCpBP,IAAMG,EAAc,SAACC,GACnB,OAAOC,OAAOD,GAAQE,QAAQ,ICKXC,G,wDACpB,WAAYnE,GAAQ,IAAD,8BAChB,cAAMA,IAEDoE,UAAY,EAAKA,UAAU5D,KAAf,gBAHD,E,yDAYhBE,EAHuBI,KAAKmC,QAApBvC,YACSI,KAAKd,MAAd8B,Q,+BAKD,IACCA,EAAShB,KAAKd,MAAd8B,KAENJ,EAIEI,EAJFJ,GACA2C,EAGEvC,EAHFuC,MACAC,EAEExC,EAFFwC,UACApC,EACEJ,EADFI,MAGJ,OACG,yBAAKmB,UAAU,OAAOkB,IAAK7C,GAC1B,yBAAM2B,UAAU,uBACd,yBAAKC,IAAKgB,EAAWf,IAAKc,KAE5B,wBAAIhB,UAAU,eAAegB,GAC7B,uBAAGhB,UAAU,eAAb,SAAkCU,EAAY7B,IAC9C,kBAACwB,EAAD,CACEE,KAAK,cACLD,UAAU,2BACVE,WAAY/C,KAAKsD,iB,GAnCSrB,cCHnB,SAASyB,EAAT,GAA2B,IAAZpE,EAAW,EAAXA,SAC5B,OACE,oCACGA,EAASqE,KAAI,SAAA9C,GAAI,OAChB,kBAAC,EAAD,CACEG,KAAMH,EACN4C,IAAK5C,EAAKD,SDHCyC,EAOZV,YAAc7D,EAmCvBuE,EAAKL,aAAe,CAClBrC,QAAS,CACPC,GAAI,EACJ2C,MAAO,4BACPC,UAAW,0FACXpC,MAAO,K,MElDI,SAASwC,EAAT,GAIX,IAHHf,EAGE,EAHFA,UACAgB,EAEE,EAFFA,KACAf,EACE,EADFA,KAEA,OACC,yBAAKP,UAAS,iBAAYM,EAAZ,YAAyBgB,EAAO,eAAiB,KAC9D,yBAAKtB,UAAU,oBACf,uBAAGA,UAAU,gBAAgBO,IAKhCc,EAAOZ,aAAe,CACrBH,UAAW,GACXgB,MAAM,EACNf,KAAM,I,MCXQ,SAASgB,IACLC,qBAAWjF,GAApBiD,KAD0B,IAAD,EAGAiC,YAASpF,EAAU,CAClDyB,UAAW,CAAEd,SAFE,SACTyB,EAHyB,EAGzBA,KAAMiD,EAHmB,EAGnBA,QAASC,EAHU,EAGVA,MAIvB,OAAID,EACK,kBAACL,EAAD,CAAQC,KAAMI,EAASnB,KAAK,wBAGjCoB,EACK,kBAACN,EAAD,CAAQd,KAAK,8BAA8BD,UAAU,UAI5D,6BAASN,UAAU,YACjB,yBAAKA,UAAU,iCACb,kBAACmB,EAAD,CACEpE,SAAU0B,EAAK1B,a,MCxBV,SAAS6E,IACvB,OACG,6BAAS5B,UAAU,QACjB,yBAAKA,UAAU,aACb,6BACE,wBAAIA,UAAU,gBAAd,gBACA,uBAAGA,UAAU,mBAAb,8B,MCNK,SAAS6B,EAAT,GAKX,IAJFvB,EAIC,EAJDA,UACAwB,EAGC,EAHDA,cACAC,EAEC,EAFDA,cACAC,EACC,EADDA,MAED,OACC,yBAAKhC,UAAS,kBAAaM,IACvB,0BAAMN,UAAU,kBAAkBG,QAAS2B,GAA3C,KACA,0BAAM9B,UAAU,iBAAiBgC,GACjC,0BAAMhC,UAAU,kBAAkBG,QAAS4B,GAA3C,MAKNF,EAAQpB,aAAe,CACrBH,UAAW,GACZ/B,SAAU,G,UCdUuC,E,kDACpB,WAAYnE,GAAQ,IAAD,8BAChB,cAAMA,IAEDsF,WAAa,EAAKA,WAAW9E,KAAhB,gBAClB,EAAK+E,YAAc,EAAKA,YAAY/E,KAAjB,gBACnB,EAAKgF,YAAc,EAAKA,YAAYhF,KAAjB,gBALH,E,0DAchBG,EAH0BG,KAAKmC,QAAvBtC,eACOG,KAAKd,MAAZ0B,M,qCASRd,EAH6BE,KAAKmC,QAA1BrC,kBAGS,WAFFE,KAAKd,MAAZ0B,M,qCASRd,EAH6BE,KAAKmC,QAA1BrC,kBAGS,WAFFE,KAAKd,MAAZ0B,M,+BAKD,IACCI,EAAShB,KAAKd,MAAd8B,KAENJ,EAKEI,EALFJ,GACA2C,EAIEvC,EAJFuC,MACAC,EAGExC,EAHFwC,UACApC,EAEEJ,EAFFI,MACAN,EACEE,EADFF,SAGI6D,EAAa7D,EAAWM,EAEhC,OACG,yBAAKmB,UAAU,YAAYkB,IAAK7C,GAC9B,4BAAQ2B,UAAU,mBAAmBG,QAAS1C,KAAKwE,YAAnD,KACA,yBAAKjC,UAAU,mBACd,wBAAIA,UAAU,oBAAoBgB,GAClC,yBAAKhB,UAAU,kBACb,kBAAC6B,EAAD,CACEE,cAAetE,KAAKyE,YACpBJ,cAAerE,KAAK0E,YACpBH,MAAOzD,IAET,uBAAGyB,UAAU,oBAAb,IAAkCU,EAAY0B,MAGhD,yBAAMpC,UAAU,kBACd,yBAAKC,IAAKgB,EAAWf,IAAKc,U,GA3DFtB,aAAboB,EASZV,YAAc7D,E,MCZR,SAAS8F,EAAT,GAMX,IALF/B,EAKC,EALDA,UACDC,EAIE,EAJFA,KACC+B,EAGC,EAHDA,YACAC,EAEC,EAFDA,QACAC,EACC,EADDA,SAED,OACC,4BACIxC,UAAS,iBAAYM,GACrBmC,SAAUH,EACVE,SAAUA,GAETjC,GACC,4BACEhB,MAAM,GACN2B,IAAK,GAEJX,GAGJgC,EAAQnB,KAAI,SAACsB,EAAQC,GACpB,OACE,4BACEpD,MAAOmD,EACPxB,IAAKyB,EAAQ,GAEZD,OCzBE,SAASE,EAAT,GAA2D,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAAkB,EAEtCrB,YAAStF,EAAU,CAClD2B,UAAW,CAAEd,SAAU,SADjByB,EAF+D,EAE/DA,KAAMiD,EAFyD,EAEzDA,QAASC,EAFgD,EAEhDA,MAGjB3E,EAAW0E,GAAWC,EAJJ,CAAC,MAAO,MAAO,OAIelD,EAAKzB,SACrD+F,EAAaF,EAAa,gBAAiB,GACjD,OACE,oCACE,kBAACR,EAAD,CACE/B,UAAS,UAAKyC,GACdR,QAASvF,EACTsF,YAAaQ,KDqBrBT,EAAO5B,aAAe,CACpB8B,QAAS,CAAC,IAAK,IAAK,KACpBC,SAAU,I,UEhCSQ,E,kDACnB,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IAEDmG,eAAiB,EAAKA,eAAe3F,KAApB,gBAHL,E,6DAQD,IACRJ,EAAaU,KAAKmC,QAAQJ,KAA1BzC,SAER,OAAOgC,OAAOC,OAAOjC,GAAUqE,KAAI,SAAA9C,GAAS,IAClCD,EAAOC,EAAPD,GACR,OACE,kBAAC,EAAD,CACEI,KAAMH,EACND,GAAIA,EACJ6C,IAAK7C,S,qCAME4E,IAGb7F,EAFwBK,KAAKmC,QAArBxC,aACiB6F,EAAEC,OAAO3D,S,+BAI3B,IAAD,EACyB9B,KAAKmC,QAA5BJ,EADF,EACEA,KAAMtC,EADR,EACQA,aACND,EAAsCuC,EAAtCvC,cAAeJ,EAAuB2C,EAAvB3C,SAAUC,EAAa0C,EAAb1C,SAC7BC,EAAWU,KAAK0F,iBAMtB,OAJOpG,EAASgD,SACZhD,EAAW,uBAAGiD,UAAU,wBAAb,oCAIX,6BAASA,UAAS,eAAUnD,EAAW,aAAe,KACpD,yBAAKmD,UAAU,kBACf,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,4BAAQA,UAAU,cAAcG,QAASjD,GACvC,yBAAK+C,IAAI,yEAAyEC,IAAI,OAG1F,yBAAKF,UAAU,SACb,wBAAIA,UAAU,eAAd,cAEF,yBAAKA,UAAU,WAEjB,kBAAC,EAAD,CACE8C,eAAgBrF,KAAKqF,eACrBD,WAAY5F,KAGhB,yBAAK+C,UAAU,kBACZjD,GAEH,yBAAKiD,UAAU,gBACb,yBAAKA,UAAU,kBACb,0CACA,kCAAQU,EAAY5D,KAEtB,kBAACuD,EAAD,CACEE,KAAK,sCACLD,UAAU,qCAEZ,kBAACD,EAAD,CACEE,KAAK,sBACLD,UAAU,0C,GA1EUZ,aAAbsD,EAOZ5C,YAAc7D,E,UCCR6G,EATH,kBACV,oCACE,kBAAC,EAAD,MACA,kBAACxB,EAAD,MACA,kBAACL,EAAD,MACA,kBAAC,EAAD,QCNW3D,EAJA,I,MAAIyF,GAAa,CAC9BC,IAAK,kDCSaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAgBlG,OAAQA,GACtB,kBAAC,EAAD,CAAoBA,OAAQA,GAC1B,kBAAC,EAAD,SAINmG,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnG,MAAK,SAAAoG,GACJA,EAAaC,gBAEdC,OAAM,SAAA3C,GACL4C,QAAQ5C,MAAMA,EAAM6C,c","file":"static/js/main.871f3634.chunk.js","sourcesContent":["import gql from 'graphql-tag'\n\nconst CURRENCY = gql`\n  query Currency {\n    currency\n  }\n`\n\nconst PRODUCTS = gql`\n  query Products($currency: Currency) {\n    products {\n      id,\n      title,\n      image_url,\n      price(currency: $currency)\n    }\n  }\n`\n\nconst PRODUCTS_PRICES = gql`\nquery ProductsPrices($currency: Currency) {\n  prices: products {\n    id,\n    price(currency: $currency)\n  }\n}\n`\n\nexport {\n  CURRENCY,\n  PRODUCTS,\n  PRODUCTS_PRICES\n}","import React, { Component } from \"react\"\nimport { PRODUCTS_PRICES } from \"../helpers/API/queries\"\nconst AppContext = React.createContext()\n\nclass AppContextProvider extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showCart: false,\n      subtotal: 0.00,\n      products: {},\n      currency: 'USD',\n      currencyError: false\n    }\n\n    this.setCartState = this.setCartState.bind(this)\n    this.setCurrency = this.setCurrency.bind(this)\n    this.addProduct = this.addProduct.bind(this)\n    this.removeProduct = this.removeProduct.bind(this)\n    this.updateProductQty = this.updateProductQty.bind(this)\n    this.updateProductPrice = this.updateProductPrice.bind(this)\n  }\n\n  setCartState() {\n    this.setState(prevState => {\n      return {\n        showCart: !prevState.showCart\n      }\n    })\n  }\n\n  setCurrency(currency) {\n    const { client } = this.props\n      client.query({\n        query: PRODUCTS_PRICES,\n        variables: { currency },\n        errorPolicy: 'all'\n      }).then( response => {\n        if (response.errors) {\n          this.setState(() => {\n            return {\n              currencyError: true\n            }\n          })\n        } else {\n          this.setState(() => {\n            return {\n              currency,\n              currencyError: false\n            }\n          }, () => {\n            this.updateProductPrices()\n          })\n        }\n      })\n  }\n\n  addProduct(product) {\n    const { products } = this.state\n    const { id } = product\n    const item = this.updateProductPrice(product)\n    const quantity = products[id] ? ++products[id].quantity : 1\n     \n    this.setState((prevState) => {\n      return {\n        products: {\n          ...prevState.products,\n          [id]: {\n            ...item,\n            quantity\n          }\n        }\n      }\n    }, () => {\n      this.calculateSubtotal()\n      this.setCartState()\n    })\n  }\n\n  updateProductPrice(item) {\n    const { currency } = this.state\n    const { client } = this.props\n    const { data } = client.cache.data\n    const priceString = `price({\"currency\":\"${currency}\"})`\n    const { id, __typename } = item\n    const price = data[`${__typename}:${id}`][priceString]\n\n    return {\n      ...item,\n      price\n    }\n  }\n\n  setProductsState(products) {\n    this.setState(() => {\n      return {\n        products\n      }\n    }, () => {\n      this.calculateSubtotal()\n    })\n  }\n\n  removeProduct(id) {\n    const { products } = this.state\n    delete products[id]\n    this.setProductsState(products)\n  }\n\n  updateProductPrices() {\n    const { client } = this.props\n    const  { products, currency } = this.state\n    const { data } = client.cache.data\n  \n    Object.values(products).forEach(item => {\n      const priceString = `price({\"currency\":\"${currency}\"})`\n      const { id, __typename } = item\n      const price = data[`${__typename}:${id}`][priceString]\n\n      products[id] = {\n        ...item,\n        price\n      }\n    })\n    this.setProductsState(products)\n  }\n\n  updateProductQty(operation, id) {\n    const product = this.state.products[id]\n    let { quantity } = product\n\n    switch(operation) {\n      case 'increase':\n        quantity++\n        break\n      case 'decrease':\n        quantity--\n        break\n      default:\n        break\n    }\n\n    if (quantity < 1) {\n      this.removeProduct(id)\n    } else {\n      this.setState((prevState) => {\n        return {\n          products: {\n            ...prevState.products,\n            [id]: {\n              ...product,\n              quantity\n            }\n          }\n        }\n      }, () => {\n        this.calculateSubtotal()\n      })\n    }\n  }\n\n  calculateSubtotal() {\n    const { products } = this.state\n    const subtotal = Object.values(products).reduce((acc, obj) => acc + (obj.price * obj.quantity), 0)\n\n    this.setState(() => {\n      return {\n        subtotal\n      }\n    })\n  }\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{ \n          cart: this.state,\n          setCartState: this.setCartState,\n          setCurrency: this.setCurrency,\n          addProduct: this.addProduct,\n          removeProduct: this.removeProduct,\n          updateProductQty: this.updateProductQty\n         }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport {\n  AppContext,\n  AppContextProvider\n}\n","import React, { Component } from 'react'\nimport { AppContext } from \"../../context/AppContext\"\nimport './style.scss'\n\nexport default class Header extends Component {  \n  static contextType = AppContext\n\n\trender() {\n    const { cart, setCartState } = this.context\n    const  { products } = cart\n    const counter = Object.keys(products).length\n\n\t\treturn (\n      <header className=\"header\">\n        <div className=\"header__container container\">\n          <img className=\"header__logo\" src=\"//cdn.shopify.com/s/files/1/0044/1237/5107/files/black.font.sipmle_360x.png?v=1555959070\" alt=\"Lumin\" />\n          <button className=\"header__cart\" onClick={setCartState}>\n            <img className=\"header__cart-icon\" src=\"//cdn.shopify.com/s/files/1/0044/1237/5107/files/Image_1_2x_5f1251f7-a674-4496-92be-9cca5561534e.png?v=1581352198\" alt=\"\" />\n            <span className=\"header__cart-counter\">{counter}</span>\n          </button>\n        </div>\n      </header>\n    )\n\t}\n}","import React from 'react'\nimport './style.scss'\n\nexport default function Button({\n\tclassList, // e.g. 'btn-primary my-custom-class'\n\ttext, // e.g. 'Click Me'\n\tclickEvent\n}) {\n\treturn (\n\t\t<button\n\t\t\tclassName={`btn ${classList}`}\n\t\t\tonClick={clickEvent}\n\t\t>\n\t\t{text}\n\t\t</button>\n\t)\n}\n\nButton.defaultProps = {\n\tclassList: \"btn-primary\",\n\ttext: \"Click Me\",\n}","const fixedNumber = (number) => {\n  return Number(number).toFixed(2)\n}\n\nexport {\n  fixedNumber\n}","import React, { Component } from 'react'\nimport { AppContext } from \"../../../context/AppContext\"\nimport Button from '../../Shared/Button'\nimport { fixedNumber } from '../../../helpers/utilities'\nimport './style.scss'\n\nexport default class Item extends Component {\n\tconstructor(props) {\n    super(props)\n\n    this.addToCart = this.addToCart.bind(this)\n  }\n\n  static contextType = AppContext\n\n  addToCart() {\n    const { addProduct } = this.context\n    const { data } = this.props\n\n    addProduct(data)\n  }\n\n\trender() {\n    const { data } = this.props\n    const {\n      id,\n      title,\n      image_url,\n      price,\n    } = data\n\n\t\treturn (\n     <div className=\"item\" key={id}>\n      <div  className=\"item__img-container\">\n        <img src={image_url} alt={title}/>\n      </div>\n      <h3 className=\"item__title\">{title}</h3>\n      <p className=\"item__price\">From ${fixedNumber(price)}</p>\n      <Button\n        text=\"Add to Cart\"\n        classList=\"btn-primary item__action\"\n        clickEvent={this.addToCart}\n      />\n     </div>\n    )\n\t}\n}\n\nItem.defaultProps = {\n  product: {\n    id: 1,\n    title: 'Age Management Collection',\n    image_url: 'https://d1b929y2mmls08.cloudfront.net/luminskin/img/new-landing-page/age-management.png',\n    price: 48.00\n  }\n}","import React from 'react'\nimport Item from '../Item'\n\nexport default function List({products}) {  \n  return (\n    <>\n      {products.map(item => (\n        <Item \n          data={item}\n          key={item.id}\n        />\n      ))}\n    </>\n  )\n}","import React from 'react'\nimport './style.scss'\n\nexport default function Loader({\n\tclassList, // e.g. error\n\tshow, // true/false\n\ttext // e.g. Loading products\n}) {\n\treturn (\n\t\t<div className={`loader ${classList} ${show ? 'loader--show' : ''}`}>\n\t\t\t<div className=\"loader__spinner\"></div>\n\t\t\t<p className=\"loader__text\">{text}</p>\n    </div>\n\t)\n}\n\nLoader.defaultProps = {\n\tclassList: '',\n\tshow: false,\n\ttext: ''\n}","import React, { useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport List from '../../components/Products/List'\nimport Loader from '../../components/Shared/Loader'\nimport { AppContext } from '../../context/AppContext'\nimport { PRODUCTS } from '../../helpers/API/queries'\nimport './style.scss'\n\nexport default function Products() {  \n  const { cart } = useContext(AppContext)\n  const currency = 'USD' // Replace by the one in cart if you want to update the products list prices\n  const { data, loading, error } = useQuery(PRODUCTS, {\n    variables: { currency }\n  })\n\n  if (loading) {\n    return <Loader show={loading} text=\"Loading products...\" />\n  }\n\n  if (error) {\n    return <Loader text=\"Oops, something went wrong!\" classList=\"error\" />\n  }\n\n  return (\n    <section className=\"products\">\n      <div className=\"products__container container\">\n        <List\n          products={data.products}\n        />\n      </div>\n    </section>\n  )\n}","import React from 'react'\nimport './style.scss'\n\nexport default function Hero() {\n\treturn (\n    <section className=\"hero\">\n      <div className=\"container\">\n        <div>\n          <h2 className=\"hero__header\">All Products</h2>\n          <p className=\"hero__subheader\">A 360° look at Lumin</p>\n        </div>\n      </div>\n    </section>\n\t)\n}","import React from 'react'\nimport './style.scss'\n\nexport default function Counter({\n  classList, // e.g. 'my-custom-class'\n  decreaseEvent,\n  increaseEvent,\n  count\n}) {\n\treturn (\n\t\t<div className={`counter ${classList}`}>\n      <span className=\"counter__action\" onClick={decreaseEvent}>-</span>\n      <span className=\"counter__text\">{count}</span>\n      <span className=\"counter__action\" onClick={increaseEvent}>+</span>\n\t\t</div>\n\t)\n}\n\nCounter.defaultProps = {\n  classList: '',\n\tquantity: 1,\n}","import React, { Component } from 'react'\nimport { AppContext } from \"../../../context/AppContext\"\nimport Counter from '../../Shared/Counter'\nimport { fixedNumber } from '../../../helpers/utilities'\nimport './style.scss'\n\nexport default class Item extends Component {\n\tconstructor(props) {\n    super(props)\n\n    this.removeItem = this.removeItem.bind(this)\n    this.increaseQty = this.increaseQty.bind(this)\n    this.decreaseQty = this.decreaseQty.bind(this)\n  }\n\n  static contextType = AppContext\n\n  removeItem() {\n    const { removeProduct } = this.context\n    const { id } = this.props\n\n    removeProduct(id);\n  }\n\n  increaseQty() {\n    const { updateProductQty } = this.context\n    const { id } = this.props\n\n    updateProductQty('increase', id)\n  }\n\n  decreaseQty() {\n    const { updateProductQty } = this.context\n    const { id } = this.props\n\n    updateProductQty('decrease', id)\n  }\n\n\trender() {\n    const { data } = this.props\n    const {\n      id,\n      title,\n      image_url,\n      price,\n      quantity\n    } = data\n\n    const totalPrice = quantity * price\n\n\t\treturn (\n     <div className=\"cart-item\" key={id}>\n       <button className=\"cart-item__close\" onClick={this.removeItem}>x</button>\n       <div className=\"cart-item__desc\">\n        <h3 className=\"cart-item__title\">{title}</h3>\n        <div className=\"cart-item__qty\">\n          <Counter \n            increaseEvent={this.increaseQty}\n            decreaseEvent={this.decreaseQty}\n            count={quantity}\n          />\n          <p className=\"cart-item__price\">${fixedNumber(totalPrice)}</p>\n        </div>\n       </div>\n        <div  className=\"cart-item__img\">\n          <img src={image_url} alt={title}/>\n        </div>\n     </div>\n    )\n\t}\n}","import React from 'react'\nimport './style.scss'\n\nexport default function Select({\n  classList, // e.g. 'select--no-border'\n\ttext, // e.g. 'Select an option'\n  changeEvent,\n  options,\n  disabled // 'disabled' \\\\ ''\n}) {\n\treturn (\n\t\t<select\n      className={`select ${classList}`}\n      onChange={changeEvent}\n      disabled={disabled}\n\t\t>\n      {text &&\n        <option\n          value=''\n          key={0}\n        >\n          {text}\n        </option>\n      }\n      {options.map((option, index) => {\n        return (\n          <option\n            value={option}\n            key={index + 1}\n          >\n            {option}\n          </option>\n        )\n      })}\n\t\t</select>\n\t)\n}\n\nSelect.defaultProps = {\n  options: ['a', 'b', 'c'],\n  disabled: ''\n}","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { CURRENCY } from '../../../helpers/API/queries'\nimport Select from '../../Shared/Select'\n\nexport default function CurrencyDropdown({ errorState, updateCurrency }) {  \n  const defaultCurrency = ['USD', 'MXN', 'CAD']\n  const { data, loading, error } = useQuery(CURRENCY, {\n    variables: { currency: 'USD' }\n  })\n  const currency = loading || error ? defaultCurrency : data.currency;\n  const errorClass = errorState ? 'select--error': ''\n  return (\n    <>\n      <Select \n        classList={`${errorClass}`}\n        options={currency}\n        changeEvent={updateCurrency}\n      />\n    </>\n  )\n}","import React, { Component } from 'react'\nimport { AppContext } from \"../../context/AppContext\"\nimport Item from './Item'\nimport Button from '../Shared/Button'\nimport Currency from './Currency'\nimport { fixedNumber } from '../../helpers/utilities'\nimport './style.scss'\n\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props)\n\n    this.updateCurrency = this.updateCurrency.bind(this)\n  }\n\n  static contextType = AppContext\n\n  renderProducts() {\n    const { products } = this.context.cart\n\n    return Object.values(products).map(item => {\n      const { id } = item\n      return (\n        <Item \n          data={item}\n          id={id}\n          key={id}\n        />\n      )\n    })\n  }\n\n  updateCurrency(e) {\n    const { setCurrency } = this.context\n    const selectedCurrency = e.target.value\n    setCurrency(selectedCurrency)\n  }\n  \n\trender() {\n    const { cart, setCartState } = this.context\n    const { currencyError, showCart, subtotal } = cart\n    let products = this.renderProducts()\n\n    if (!products.length) {\n      products = <p className=\"cart__products--none\">There are no items in your cart</p>\n    }\n\n\t\treturn (\n      <section className={`cart ${showCart ? 'cart--open' : ''}`} >\n        <div className=\"cart__overlay\"></div>\n        <div className=\"cart__content\">\n          <div className=\"cart__header\">\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <button className=\"cart__close\" onClick={setCartState}>\n                  <img src=\"//cdn.shopify.com/s/files/1/0044/1237/5107/files/down.png?v=1583510959\" alt=\"\" />\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <h1 className=\"cart__title\">Your Cart</h1>\n              </div>\n              <div className=\"col-4\"></div>\n            </div>\n            <Currency \n              updateCurrency={this.updateCurrency}\n              errorState={currencyError}\n            />\n          </div>\n          <div className=\"cart__products\">\n            {products}\n          </div>\n          <div className=\"cart__footer\">\n            <div className=\"cart__subtotal\">\n              <span>Subtotal</span>\n              <span>${fixedNumber(subtotal)}</span>\n            </div>\n            <Button\n              text=\"Make this a Subscription (Save 20%)\"\n              classList=\"btn-secondary btn--alt cart__btn\"\n            />\n            <Button\n              text=\"Proceed to Checkout\"\n              classList=\"btn-primary btn--alt cart__btn\"\n            />\n          </div>\n        </div>\n      </section>\n    )\n\t}\n}","import React from 'react'\nimport Header from './Header'\nimport Products from '../views/Products'\nimport Hero from './Hero'\nimport Cart from './Cart'\nimport '../styles/index.scss'\n\nconst App = () => (\n  <>\n    <Header />\n    <Hero />\n    <Products />\n    <Cart />\n  </>\n)\n\nexport default App\n","import ApolloClient from 'apollo-boost'\n\nconst client = new ApolloClient({\n  uri: 'https://pangaea-interviews.now.sh/api/graphql'\n})\n\nexport default client","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport App from './components/App'\nimport { AppContextProvider } from \"./context/AppContext\"\nimport client from './client'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <AppContextProvider client={client}>\n        <App />\n      </AppContextProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}